% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/listing_export.R
\name{export_as_txt}
\alias{export_as_txt}
\title{Export as plain text with page break symbol}
\usage{
export_as_txt(
  tt,
  file = NULL,
  page_type = NULL,
  landscape = FALSE,
  pg_width = page_dim(page_type)[if (landscape) 2 else 1],
  pg_height = page_dim(page_type)[if (landscape) 1 else 2],
  font_family = "Courier",
  font_size = 8,
  paginate = .need_pag(page_type, pg_width, pg_height, lpp, cpp),
  cpp = NULL,
  lpp = NULL,
  ...,
  page_break = "\\\\f",
  hsep = default_hsep(),
  indent_size = 2,
  tf_wrap = paginate,
  max_width = cpp,
  colwidths = propose_column_widths(matrix_form(tt, TRUE))
)
}
\arguments{
\item{file}{character(1). File to write.}

\item{paginate}{logical(1). Should \code{tt} be paginated before writing the file. Defaults to \code{TRUE} if any sort of page dimension is specified.}

\item{cpp}{numeric(1). Number of characters per page (width)}

\item{lpp}{numeric(1) or NULL. Number of row lines (not counting titles and
footers) to have per page. Standard is \code{15} while \code{NULL} disables vertical
pagination.}

\item{\dots}{Passed directly to \code{\link{paginate_listing}}}

\item{page_break}{character(1). Page break symbol (defaults to outputting \code{"\\s"}).}

\item{colwidths}{numeric or NULL. Print widths of columns, if manually
set/previously known.}
}
\value{
\code{file} (this function is called for the side effect of writing the file.
}
\description{
Export as plain text with page break symbol
}
\note{
When specified, \code{font_size} is used \emph{only} to determine pagination based
on page dimensions. The written file is populated in raw ASCII text, which
does not have the concept of font size.
}
\examples{

dat <- ex_adae
lsting <- as_listing(dat[1:25, ], key_cols = c("USUBJID", "AESOC")) \%>\%
  add_listing_col("AETOXGR") \%>\%
  add_listing_col("BMRKR1", format = "xx.x") \%>\%
  add_listing_col("AESER / AREL", fun = function(df) paste(df$AESER, df$AREL, sep = " / "))
main_title(lsting) <- "this is some title"
main_footer(lsting) <- "this is some footer"
cat(export_as_txt(lsting, file = NULL, paginate = TRUE))

}
