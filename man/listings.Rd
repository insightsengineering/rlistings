% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rlistings.R
\name{as_listing}
\alias{as_listing}
\alias{as_keycol}
\alias{is_keycol}
\alias{get_keycols}
\alias{listing_dispcols}
\alias{add_listing_dispcol}
\alias{listing_dispcols<-}
\alias{add_listing_col}
\title{Create a Listing from a \code{data.frame} or \code{tibble}}
\usage{
as_listing(
  df,
  key_cols = names(df)[1],
  disp_cols = NULL,
  non_disp_cols = NULL,
  main_title = NULL,
  subtitles = NULL,
  main_footer = NULL,
  prov_footer = NULL
)

as_keycol(vec)

is_keycol(vec)

get_keycols(df)

listing_dispcols(df)

add_listing_dispcol(df, new)

listing_dispcols(df) <- value

add_listing_col(df, name, fun = NULL, format = NULL, na_str = "-")
}
\arguments{
\item{df}{data.frame or listing_df. The (non-listing) data.frame to be converted to a listing or
the listing_df to be modified.}

\item{key_cols}{character. Names of columns which should be treated as \emph{key columns}
when rendering the listing. Key columns allow you to group repeat occurrences.}

\item{disp_cols}{character or NULL. Names of non-key columns which should be displayed when
the listing is rendered. Defaults to all columns of \code{df} not named in \code{key_cols} or
\code{non_disp_cols}.}

\item{non_disp_cols}{character or NULL. Names of non-key columns to be excluded as display
columns. All other non-key columns are then treated as display columns. Invalid if
\code{disp_cols} is non-NULL.}

\item{main_title}{character(1) or NULL. The main title for the listing, or
\code{NULL} (the default). Must be length 1 non-NULL.}

\item{subtitles}{character or NULL. A vector of subtitle(s) for the
listing, or \code{NULL} (the default).}

\item{main_footer}{character or NULL. A vector of main footer lines
for the listing, or \code{NULL} (the default).}

\item{prov_footer}{character or NULL. A vector of provenance strings
for the listing, or \code{NULL} (the default). Each string element is placed on a new line.}

\item{vec}{any. A column vector from a \code{listing_df} to be annotated as a key column.}

\item{new}{character. Names of columns to be added to
the set of display columns.}

\item{value}{character. New value.}

\item{name}{character(1). Name of the existing or new column to be
displayed when the listing is rendered.}

\item{fun}{function or NULL. A function which accepts \code{df} and
returns the vector for a new column, which is added to \code{df} as
\code{name}, or NULL if marking an existing column as
a listing column.}

\item{format}{character(1) or function. The format label (string) or formatter function to apply to \code{x}.}

\item{na_str}{character(1). String that should be displayed when the value of \code{x} is missing.
Defaults to \code{"NA"}.}
}
\value{
A \code{listing_df} object, sorted by the key columns.

\code{df}, with \code{name} created (if necessary) and marked for
display during rendering.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

Creates listings by using \code{cols} and \code{key_cols} to produce a compact and
elegant representation of the \code{data.frame} or \code{tibble} in input.
}
\details{
At its core, a \code{listing_df} object is a \code{tbl_df} object with a customized
print method  and support for the formatting and pagination machinery provided by
the \code{formatters} package.

\code{listing_df} objects have two 'special' types of columns: key columns and display columns.

Key columns act as indexes, which means a number of things in practice.

All key columns are also display columns.

\code{listing_df} objects are always sorted by their set of key_columns at creation time.
Any \code{listing_df} object which is not sorted by its full set of key columns (e.g.,
one  whose rows have been reordered explicitly creation) is invalid and the behavior
when rendering or paginating that object is undefined.

Each value of a key column is printed only once per page and per unique combination of
values for all higher-priority (i.e., to the left of it) key columns. Locations
where a repeated value would have been printed within a key column for the same
higher-priority-key combination on the same page are rendered as empty space.
Note, determination of which elements to display within a key column at rendering is
based on the underlying value; any non-default formatting applied to the column
has no effect on this behavior.

Display columns are columns which should be rendered, but are not key columns. By
default this is all non-key columns in the incoming data, but in need not be.
Columns in the underlying data which are neither key nor display columns remain
within the object available for computations but \emph{are not rendered during
printing or export of the listing}.
}
\examples{
dat <- ex_adae

# This example demonstrates the listing with key_cols (values are grouped by USUBJID) and
# multiple lines in prov_footer
lsting <- as_listing(dat[1:25, ],
  key_cols = c("USUBJID", "AESOC"),
  main_title = "Example Title for Listing",
  subtitles = "This is the subtitle for this Adverse Events Table",
  main_footer = "Main footer for the listing",
  prov_footer = c(
    "You can even add a subfooter", "Second element is place on a new line",
    "Third string"
  )
) \%>\%
  add_listing_col("AETOXGR") \%>\%
  add_listing_col("BMRKR1", format = "xx.x") \%>\%
  add_listing_col("AESER / AREL", fun = function(df) paste(df$AESER, df$AREL, sep = " / "))

mat <- matrix_form(lsting)

cat(toString(mat))

# This example demonstrates the listing table without key_cols
# and specifying the cols with disp_cols.
dat <- ex_adae
lsting <- as_listing(dat[1:25, ], disp_cols = c("USUBJID", "AESOC", "RACE", "AETOXGR", "BMRKR1"))

mat <- matrix_form(lsting)

cat(toString(mat))

}
